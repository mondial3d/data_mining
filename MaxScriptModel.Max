fn convertToPhysicalMaterialAndReconnectMaps obj =
(
    if obj.material != undefined and classOf obj.material != PhysicalMaterial then
    (
        local physMat = PhysicalMaterial()
        local oldMat = obj.material

        try
        (
            if oldMat.diffuseMap != undefined then
            (
                physMat.base_color_map = oldMat.diffuseMap
                physMat.base_color_map_enabled = true
            )
        ) catch ()
        
        obj.material = physMat
    )
)

fn convertMaxToGLB file exportPath =
(
    loadMaxFile file quiet:true

    for obj in objects do
    (
        convertToPhysicalMaterialAndReconnectMaps obj
    )

    exportFile (exportPath + "\\" + (getFilenameFile file) + ".glb") #noPrompt using:GLTFExporter
)

fn processFilesFromList filePath exportPath =
(
    local fileStream = openFile filePath mode:"r"
    if fileStream != undefined then
    (
        while not eof fileStream do
        (
            local line = readLine fileStream
            convertMaxToGLB line exportPath
        )
        close fileStream
    )
)

-- Usage
processFilesFromList "D:\\file.txt" "C:\\path\\to\\export\\folder"
